"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*==============Dont Delete This============================*/
const DialogManager_1 = require("JS/Dialog/DialogManager");
const Common_1 = require("JS/Utils/Common");
function Create() { return new DialogModDemo(); }
exports.Create = Create;
/*=========================================================*/
class DialogModDemo {
    constructor() {
        this.TestSpeed = 0;
    }
    OnStart() {
        this.TestCube = Common_1.$("Cube");
        this.TestCube.gameObject.SetActive(true);
        //#region Define A Dialog
        let FlowA = DialogManager_1.CreateDialog();
        FlowA.SetCallBack(() => {
            Common_1.Debug.LogWarning("End Talk!!!");
        });
        FlowA.Say("Hello Black-Rabbit");
        FlowA.Say("This flow shows the features of Dialog Mod.");
        FlowA.Say("Will Wait For 60 Frames");
        FlowA.WaitForFrames(60);
        FlowA.Say("Will Wait for 2 seconds");
        FlowA.WaitForSeconds(2);
        FlowA.Say("I will make the cube rotate");
        FlowA.DoAction(() => {
            this.TestSpeed = 2;
        });
        FlowA.Say("Faster!!!");
        FlowA.DoAction(() => {
            this.TestSpeed = 10;
        });
        FlowA.Say("SlowDown!!!");
        FlowA.DoAction(() => {
            this.TestSpeed = 1;
        });
        FlowA.Say("Stop!!!");
        FlowA.DoAction(() => {
            this.TestSpeed = 0;
        });
        FlowA.Say("Please Select A Number.");
        FlowA.Options([
            DialogManager_1.option("1", () => {
                FlowB.Start();
            }),
            DialogManager_1.option("2", () => {
                FlowC.Start();
            }),
            DialogManager_1.option("Select Nothing....", () => {
                FlowA.Continue();
            })
        ], true);
        FlowA.Say("You Select Nothing ....");
        FlowA.DoAction(() => {
            FlowEnd.Start();
        });
        //#endregion
        //#region Define B Dialog
        let FlowB = DialogManager_1.CreateDialog();
        FlowB.Say("You Select 1");
        FlowB.DoAction(() => {
            FlowEnd.Start();
        });
        //#endregion
        //#region Define C Dialog
        let FlowC = DialogManager_1.CreateDialog();
        FlowC.Say("You Select 2");
        FlowC.DoAction(() => {
            FlowEnd.Start();
        });
        //#endregion
        //#region Define End Dialog
        let FlowEnd = DialogManager_1.CreateDialog();
        FlowEnd.Say("Here is the End Of The Show");
        FlowEnd.Say("Restart Now???");
        FlowEnd.Options([
            DialogManager_1.option("yes", () => {
                FlowA.Start();
            }),
            DialogManager_1.option("no", () => {
                Common_1.QuitGame();
            })
        ], false);
        //#endregion
        //Start The Logic
        Common_1.WaitForSeconds(1, () => {
            FlowA.Start();
        });
    }
    OnUpdate() {
    }
    OnFixedUpdate() {
        let V = Common_1.Vector3.op_Multiply(this.TestCube.up, this.TestSpeed);
        this.TestCube.Rotate(V);
    }
    OnDestroy() {
    }
}
//# sourceMappingURL=DialogModDemo.js.map