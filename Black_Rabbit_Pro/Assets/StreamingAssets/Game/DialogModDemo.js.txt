"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Create = void 0;
/*==============Dont Delete This============================*/
const DialogManager_1 = require("JS/Dialog/DialogManager");
const Common_1 = require("JS/Utils/Common");
function Create() { return new Level1(); }
exports.Create = Create;
/*===============================================*/
class Level1 {
    constructor() {
        this.TestSpeed = 0;
    }
    OnStart() {
        Common_1.Debug.LogWarning("Enter Level1, this is a demo level");
        this.TestCube = Common_1.$("Cube");
        this.TestCube.gameObject.SetActive(true);
        //#region Define A Dialog
        let flow = DialogManager_1.CreateDialog();
        flow.SetCallBack(() => {
            Common_1.Debug.LogWarning("End Talk!!!");
        });
        flow.Say("Hello Black-Rabbit");
        flow.Say("This flow shows the features of Dialog Mod.");
        flow.WaitForFrames(360);
        flow.Say("Wait For 360 Frames");
        flow.WaitForSeconds(3);
        flow.Say("Wait for 3 seconds");
        flow.Say("I will make the cube rotate");
        flow.DoAction(() => {
            this.TestSpeed = 2;
        });
        flow.Say("Faster!!!");
        flow.DoAction(() => {
            this.TestSpeed = 10;
        });
        flow.Say("SlowDown!!!");
        flow.DoAction(() => {
            this.TestSpeed = 1;
        });
        flow.Say("Stop!!!");
        flow.DoAction(() => {
            this.TestSpeed = 0;
        });
        flow.Say("Please Select A Number.");
        flow.Option("1", () => {
            FlowB.Start();
        });
        flow.Option("2", () => {
            FlowC.Start();
        });
        flow.Option("Select Nothing.....");
        //#endregion
        //#region Define B Dialog
        let FlowB = DialogManager_1.CreateDialog();
        FlowB.Say("You Select 1");
        //#endregion
        //#region Define C Dialog
        let FlowC = DialogManager_1.CreateDialog();
        FlowC.Say("You Select 2");
        //#endregion
        //Start The Logic
        Common_1.WaitForSeconds(1, () => {
            flow.Start();
        });
    }
    OnUpdate() {
        let V = Common_1.Vector3.op_Multiply(this.TestCube.up, this.TestSpeed);
        this.TestCube.Rotate(V);
    }
    OnDestroy() {
    }
}
//# sourceMappingURL=DialogModDemo.js.map