"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Trigger = exports.$Trigger = exports.Outline = exports.$Outline = void 0;
const csharp_1 = require("csharp");
const Common_1 = require("Utils/Common");
const $Outline = csharp_1.Black_Rabbit.SimpleOutline.GetOutLineObj;
exports.$Outline = $Outline;
class Outline extends csharp_1.Black_Rabbit.SimpleOutline {
}
exports.Outline = Outline;
function $Trigger(name, type) {
    let trigger = csharp_1.TriggerHelper.GetTrigger(name);
    if (trigger != null) {
        return new Trigger(trigger, type);
    }
    else {
        Common_1.Debug.LogError("Can not find Trigger " + name);
    }
}
exports.$Trigger = $Trigger;
class Trigger {
    constructor(trigger, type) {
        this.UTrigger = trigger;
        this.UTrigger.isUseful = true;
        this.UTrigger.GameType = type;
    }
    MakeUseful() {
        this.UTrigger.MakeUseful();
    }
    MakeUseless() {
        this.UTrigger.MakeUseless();
    }
    RegEnterAct(tag, cb) {
        if (this.UTrigger.EnterAct.ContainsKey(tag)) {
            this.UTrigger.EnterAct.set_Item(tag, cb);
        }
        else {
            this.UTrigger.EnterAct.Add(tag, cb);
        }
    }
    RegLeaveAct(tag, cb) {
        if (this.UTrigger.LeaveAct.ContainsKey(tag)) {
            this.UTrigger.LeaveAct.set_Item(tag, cb);
        }
        else {
            this.UTrigger.LeaveAct.Add(tag, cb);
        }
    }
}
exports.Trigger = Trigger;
//# sourceMappingURL=Trigger.js.map